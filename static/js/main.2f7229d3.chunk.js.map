{"version":3,"sources":["pages/Home/home_container.js","components/github-fetch/github-fetch.js","components/github-fetch/github-fetch_container.js","pages/Home/home.js","App.js","index.js"],"names":["HomeContainer","useState","user","setUserData","repos","setRepos","error","setError","fetchRepoReadme","e","targetOwner","targetRepName","a","Axios","get","readmeResponse","readmeData","data","str","content","buff","Buffer","from","base64ToString","toString","childP","target","parentNode","querySelector","childSpan","innerHTML","classList","toggle","showClickHandler","preventDefault","query","document","console","log","githubFetch","clickHandler","getInput","className","autoComplete","onChange","placeholder","type","id","name","required","onClick","value","GithubFetchContainer","username","setUsername","fetchUser","userResponse","response","status","fetchRepositories","repositoryResponse","useEffect","repos_url","Home","src","avatar_url","alt","map","item","i","owner","login","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f7229d3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from \"axios\";\r\n\r\n// components ui\r\nimport HomeUI from './home.js';\r\n\r\nconst HomeContainer = () => {\r\n    const [user, setUserData] = useState({});\r\n    const [repos, setRepos] = useState([]); \r\n    const [error, setError]= useState('');\r\n\r\n    const fetchRepoReadme = async (e,targetOwner, targetRepName) => {\r\n\r\n        let readmeResponse = await Axios.get(`https://api.github.com/repos/${targetOwner}/${targetRepName}/contents/README.md`);\r\n        let readmeData = readmeResponse.data;\r\n        let str = readmeData.content;\r\n        let buff = new Buffer.from(str, 'base64')\r\n        let base64ToString = buff.toString('ascii');\r\n        \r\n        let childP = e.target.parentNode.querySelector('p');\r\n        let childSpan = e.target.parentNode.querySelector('span');\r\n        childP.innerHTML = `Read Me: ${base64ToString}`;\r\n        childP.classList.toggle('active');\r\n\r\n        childSpan.classList.toggle('active');\r\n        \r\n    } //set repo readme callback to use it on home container ui\r\n    \r\n    const showClickHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let query = document.querySelector('.home-content__repos');\r\n        query.classList.toggle('active');\r\n        console.log(query)\r\n    }\r\n\r\n    return(\r\n        <HomeUI\r\n            user = {user}\r\n            setUserData = {setUserData}\r\n            repos = {repos}\r\n            setRepos = {setRepos}\r\n            error = {error}\r\n            setError = {setError}\r\n            fetchRepoReadme = {fetchRepoReadme}\r\n            showClickHandler = {showClickHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default HomeContainer;","import React from 'react';\r\n\r\nconst githubFetch = ({ clickHandler, getInput }) => {\r\n    \r\n    return(\r\n        <div className=\"github-fetch\">\r\n            <form className=\"input-form\">\r\n                <input autoComplete=\"off\" onChange={ (e) => getInput(e) } className=\"form__home normal-2\" placeholder=\"Search Username\" type=\"text\" id=\"username\" name=\"username\" required/>\r\n                <input className=\"form__submit normal-2\" onClick={ (e) => clickHandler(e) } type=\"button\" value=\"Search\"/> \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default githubFetch;","import React, { useEffect, useState } from 'react';\r\nimport Axios from \"axios\";\r\n\r\n// component ui\r\nimport GithubFetchUI from './github-fetch.js';\r\n\r\nconst GithubFetchContainer = ({ user, setUserData, setRepos, error, setError }) => {\r\n   \r\n    const [username, setUsername] = useState('');\r\n   \r\n    const checkRateLimit = async () => {\r\n        let response = await Axios.get(`https://api.github.com/rate_limit`);\r\n        let data = response.data;\r\n        let reset = new Date(data.rate.reset * 1000);\r\n        // console.log(reset);\r\n        console.log(data.rate);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        try{\r\n            let userResponse = await Axios.get(`https://api.github.com/users/${username}`)\r\n            setUserData(userResponse.data);\r\n            setError('');\r\n        }catch (err) {\r\n            if(err.response.status === 404){\r\n                setError('User Does Not Exist!');\r\n            }\r\n        }\r\n    } // fetch user list based on search input username\r\n\r\n    const fetchRepositories = async (target) => {\r\n        let repositoryResponse = await Axios.get(target);\r\n\r\n        setRepos(repositoryResponse.data);\r\n    } // fetch repositories under the user\r\n\r\n    const clickHandler = (e) => {\r\n        e.preventDefault();\r\n        fetchUser();\r\n    }\r\n\r\n    const getInput = (e) => {\r\n        e.preventDefault();\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // check the current github api rate limit\r\n        // checkRateLimit()\r\n\r\n        if(user.repos_url){\r\n            fetchRepositories(user.repos_url);\r\n        }\r\n    }, [user])\r\n    \r\n   \r\n    return(\r\n        <GithubFetchUI\r\n            clickHandler = {clickHandler}\r\n            getInput = {getInput}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GithubFetchContainer;","import React from 'react';\r\n\r\n// compoenents\r\nimport GithubFetch from '../../components/github-fetch/github-fetch_container.js';\r\n\r\nconst Home = ({ user, setUserData, repos, setRepos, error, setError, fetchRepoReadme, showClickHandler}) => {\r\n   \r\n    return(\r\n        <div className=\"home\">\r\n            <header className=\"normal-1\">github fetch</header>\r\n            <GithubFetch\r\n              user = {user}\r\n              setUserData = {setUserData}\r\n              setRepos = {setRepos}\r\n              setError = {setError}\r\n              error = {error}\r\n            />\r\n\r\n            <div className=\"home-content\">\r\n                <div key={user.id} className=\"home-content__profile\">\r\n                    <img src={user.avatar_url} alt=\"\"/>\r\n                    <span className=\"normal-2\">{user.name}</span>\r\n                </div>\r\n                <button className=\"normal-2\" onClick={(e) =>showClickHandler(e)}>Show Repositories</button>\r\n                { error ? (<span className=\"normal-1 error\">{error}</span>) \r\n                : (<div className=\"home-content__repos\">\r\n                    {repos ? repos.map( (item, i) => (\r\n                        <div key={item.id} onClick={(e)=> fetchRepoReadme(e,item.owner.login, item.name)} className={`home-content__repos-holder repo-${i}`}>\r\n                            <span className=\"normal-1\">{item.name}</span>\r\n                            <p className={`normal-2 p-${i}`}></p>\r\n                        </div>)) \r\n                : (<span className=\"normal-1\"> Loading . . .</span>)}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\n\n// pages\nimport Home from './pages/Home/home_container.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dist/css/style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}